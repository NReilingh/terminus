## This workflow is triggered by a release being created.
name: Terminus Release
run-name: On Release, update homebrew and .deb package to ${{ inputs.deploy_target }} by @${{ github.actor }}
on:
  ## We have to explicitly tag a release and create a release
  ## in order to trigger this workflow.
  release:
    - '*'

jobs:
  checkout_build:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/php-ci:v7.4
    name: Checkout & build Phar
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Save repo content as artifact
        uses: actions/upload-artifact@v3
        with:
          name: full-workspace
          path: ${{ github.workspace }}
      - name: Full Composer Install
        run: composer install
      - name: Validate Code
        run: composer code:lint
      - name: Phar Build
        env:
          ## Do not include "-dev" in the version ID
          BUILD_RELEASE: TRUE
        run: |
          mkdir $HOME/box
          composer require humbug/box --working-dir=$HOME/box
          export PATH=~/box/vendor/bin:$PATH
          composer phar:build
      - name: Save terminus.phar as artifact
        uses: actions/upload-artifact@v3
        with:
          name: terminus-phar
          path: terminus.phar
          if-no-files-found: error

  on_release:
    runs-on: ubuntu-latest
    name: OnRelease
    container:
      image: quay.io/pantheon-public/php-ci:1.x
    needs: [ checkout_build ]
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository == 'pantheon-systems/terminus' }}
    steps:
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v3
        with:
          name: terminus-phar
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: terminus.phar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package_macos:
    runs-on: macos-latest
    name: Package a Homebrew release
    needs: [ on_release ]
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository == 'pantheon-systems/terminus' }}
    steps:
      - name: Bump Homebrew formula
        uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
          tap: pantheon-systems/external
          tag: ${{github.ref}}
          revision: ${{github.sha}}
          formula: terminus

  package_linux:
    runs-on: ubuntu-latest
    name: Package .deb Release
    container:
      image: quay.io/pantheon-public/php-ci:v7.4
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    needs: [ on_release ]
    steps:
      - name: Download repo content from artifact
        uses: actions/download-artifact@v2
        with:
          name: full-workspace
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: terminus-phar
      - name: Full Composer Install
        run: composer install
      - name: Prepare needed folder and fix permissions
        run: mkdir -p ~/.terminus/cache/tokens && mv ./terminus.phar ./terminus && chmod +x ./terminus
      - name: Passegers, gather ye packages
        run: composer bundle:linux
      - name: Save terminus deb as artifact
        uses: actions/upload-artifact@v2
        with:
          name: terminus-deb
          path: ./*.deb
          if-no-files-found: error

  publish_linux:
    runs-on: ubuntu-latest
    name: Publish .deb Release
    strategy:
      matrix:
        # Add needed repositories in the form of <package_name>/<distro>/<version>.
        repository:
          - 'terminus/debian/buster'
          - 'terminus/debian/bullseye'
          - 'terminus/debian/bookworm'
          - 'terminus/ubuntu/bionic'
          - 'terminus/ubuntu/focal'
          - 'terminus/ubuntu/groovy'
          - 'terminus/ubuntu/hirsute'
          - 'terminus/ubuntu/impish'
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    needs: [ 'package_linux' ]
    steps:
      - name: Download terminus deb as artifact
        uses: actions/download-artifact@v2
        with:
          name: terminus-deb
      - uses: docker://lpenz/ghaction-packagecloud:v0.2
        with:
          user: stovak
          repository: ${{ matrix.repository }}
          path: |
            *.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
