name: Terminus
on:
  push:
  pull_request:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  # Checkout in separate job because docker image is alpine based and checkout action doesn't work.
  checkout_build:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/php-ci:v7.4
    name: Checkout & build Phar
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Save repo content as artifact
        uses: actions/upload-artifact@v2
        with:
          name: full-workspace
          path: /home/runner/work/terminus/terminus
      - name: Full Composer Install
        run: composer install
      - name: Phar Build
        run: composer phar:build
      - name: permissions
        run: chmod +x ./t3
      - name: Save t3.phar as artifact
        uses: actions/upload-artifact@v2
        with:
          name: t3-phar
          path: t3
          if-no-files-found: error


  commit:
    runs-on: ${{ matrix.operating-system }}
    name: Commit testing matrix - PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }}
    if: ${{ ! startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    strategy:
      matrix:
        operating-system: [ 'macos-latest' ]
        php-versions: [ '7.4', '8.0' ]
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
      COMPOSER_PROCESS_TIMEOUT: 0
      COMPOSER_ALLOW_SUPERUSER: 1
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      TERMINUS_SITE: ${{ secrets.TERMINUS_SITE }}
    needs: [ checkout_build ]
    steps:
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd, mbstring, zip
          coverage: pcov
      - name: Download repo content from artifact
        uses: actions/download-artifact@v2
        with:
          name: full-workspace
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: t3-phar
      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Functional Tests
        run: composer test:short
        env:
          COMPOSER_ALLOW_SUPERUSER: 1
          TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
          TERMINUS_SITE: ${{ secrets.TERMINUS_SITE }}
      - name: Coverage Report
        run: composer coverage
      - name: Save coverage as artifact
        uses: actions/upload-artifact@v2
        with:
          name: CoverageReport
          path: docs/TestCoverage.md

  behat_tests:
    runs-on: ubuntu-latest
    name: Behat Tests
    needs: [ checkout_build ]
    container:
      image: quay.io/pantheon-public/php-ci:v7.4
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    env:
      TERMINUS_VERBOSITY: 22
      TERMINUS_EXECUTABLE: t3
      TERMINUS_TEST_MODE: 1
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
    steps:
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd, mbstring, zip
          coverage: pcov
      - name: Download repo content from artifact
        uses: actions/download-artifact@v2
        with:
          name: full-workspace
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: t3-phar
      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Functional Tests
        run: composer test:behat


  functional_tests:
    runs-on: ubuntu-latest
    name: Tagged Release Functional Tests
    needs: [ checkout_build ]
    strategy:
      matrix:
        # TODO: test on Win10/WSL+Ubunutu
        operating-system: [ 'macos-latest', 'ubuntu-latest' ]
        php-versions: [ '7.4', '8.0' ]
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    steps:
      - name: Download repo content from artifact
        uses: actions/download-artifact@v2
        with:
          name: full-workspace
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: t3-phar
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: gd, mbstring, zip
          coverage: pcov
      - name: Install
        run: composer install --no-interaction --prefer-dist
      - name: Full testing scheme
        run: composer functional:all
      - name: Coverage Report
        run: composer coverage
      - name: Save coverage as artifact
        uses: actions/upload-artifact@v2
        with:
          name: CoverageReport
          path: docs/TestCoverage.md
      # If you've gotten this far, tag it as a release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            t3
          prerelease: true
          # TODO: add a changelog to the release process
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  package_macos:
    runs-on: macos-latest
    name: Package a Homebrew release
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    needs: [ 'functional_tests', 'behat_tests' ]
    steps:
      - name: Brew Tap Terminus
        run: brew install stovak/t3/terminus
      - name: Update tap with new release
        run: brew bump-formula-pr --url=${{ steps.tagged.outputs.url }} --no-browse --no-audit --commit stovak/t3/terminus


  package_linux:
    runs-on: ubuntu-latest
    name: Package .deb Release
    if: ${{ startsWith(github.ref, 'refs/tags/')  && github.repository_owner == 'pantheon-systems' }}
    needs: [ 'functional_tests', 'behat_tests' ]
    steps:
      - name: Download repo content from artifact
        uses: actions/download-artifact@v2
        with:
          name: full-workspace
      - name: Download terminus.phar as artifact
        uses: actions/download-artifact@v2
        with:
          name: t3-phar
      - name: Passegers, gather ye packages
        run: composer bundle:linux
      - uses: docker://lpenz/ghaction-packagecloud:v0.2
        with:
          repository: stovak/terminus
          files: |
            *.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
